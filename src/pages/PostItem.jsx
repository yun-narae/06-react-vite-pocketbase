import React, { useEffect } from "react";
import { Swiper, SwiperSlide } from 'swiper/react';
import 'swiper/css';
import 'swiper/css/navigation';
import pb from "../lib/pocketbase";
import { Navigation } from 'swiper/modules';
import PostEditModal from "./PostEditModal";
import useImageViewer from "../hooks/useImageViewer"; // üî• Ïª§Ïä§ÌÖÄ ÌõÖ Ï∂îÍ∞Ä
import PostImageModal from "./PostImageModal";


const PostItem = ({ 
    user, 
    post, 
    fetchPosts, 
    editPost, 
    setEditPost, 
    editModal, 
    setEditModal, 
    // handleImageClick, // ‚úÖ Î∂ÄÎ™®ÏóêÏÑú handleImageClick Ï†ÑÎã¨Î∞õÏùå
    isMobile, 
    setIsMobile 
}) => {
    const { selectedImage, setSelectedImage, handleImageClick } = useImageViewer(); // üî• Ïª§Ïä§ÌÖÄ ÌõÖ ÏÇ¨Ïö©
    
    useEffect(() => {
        const handleResize = () => setIsMobile(window.innerWidth <= 500);
        window.addEventListener("resize", handleResize);
        return () => window.removeEventListener("resize", handleResize);
    }, []);

    // üîπ Í≤åÏãúÎ¨º ÏÇ≠Ï†ú Ìï®Ïàò (Ïú†Ï†ÄÏôÄ ÏûëÏÑ±ÏûêÍ∞Ä ÏùºÏπòÌïòÎäî Í≤ΩÏö∞ÏóêÎßå Í∞ÄÎä•)
    const handleDelete = async (post) => {
        if (post.editor !== user.name) {
            alert("ÏÇ≠Ï†úÌï† Í∂åÌïúÏù¥ ÏóÜÏäµÎãàÎã§.");
            return;
        }
        if (!window.confirm("Ï†ïÎßê ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?")) return;

        try {
            await pb.collection("post").delete(post.id);
            fetchPosts();
        } catch (error) {
            console.error("Í≤åÏãúÎ¨º ÏÇ≠Ï†ú Ïã§Ìå®:", error);
        }
    };

    // üîπ Í≤åÏãúÎ¨º ÏàòÏ†ï Î™®Îã¨ Ïó¥Í∏∞
    const handleEdit = (post) => {
        setEditPost(post); 
        setEditModal(true); 
    };

    return (
        <li className="border p-4 mb-2 rounded">
            <p className="font-bold">{post.editor}Îãò</p>
            <p>{post.title}</p>
            <p>{post.text}</p>
            <p className="text-sm text-gray-500">{new Date(post.updated).toISOString().split("T")[0]}</p>

            {post.field && Array.isArray(post.field) ? (
                <div>
                    {isMobile ? (
                        <Swiper navigation modules={[Navigation]} className="">
                            {post.field.map((img, index) => (
                                <SwiperSlide key={index}>
                                    <img 
                                        src={`${import.meta.env.VITE_PB_API}/files/${post.collectionId}/${post.id}/${img}`} 
                                        alt={post.title} 
                                        className="aspect-square object-cover rounded cursor-pointer hover:shadow-xl hover:opacity-80"
                                        onClick={() => handleImageClick(img, post, true)} // ‚úÖ Í∏∞Ï°¥ Ïù¥ÎØ∏ÏßÄ ÌÅ¥Î¶≠ Ïãú PostImageModal Ïã§Ìñâ
                                    />
                                </SwiperSlide>
                            ))}
                        </Swiper>
                    ) : (
                        <div className="flex space-x-2 bg-blue-400">
                            {post.field.map((img, index) => (
                                <img 
                                    key={index} 
                                    src={`${import.meta.env.VITE_PB_API}/files/${post.collectionId}/${post.id}/${img}`} 
                                    alt={post.title} 
                                    className="w-[32.5%] md:w-[32.8%] aspect-square object-cover rounded cursor-pointer hover:shadow-xl hover:opacity-80" 
                                    onClick={() => handleImageClick(img, post, true)} // ‚úÖ Í∏∞Ï°¥ Ïù¥ÎØ∏ÏßÄ ÌÅ¥Î¶≠ Ïãú PostImageModal Ïã§Ìñâ
                                />
                            ))}
                        </div>
                    )}
                </div>
            ) : null}

            {post.editor === user.name && (
                <>
                    <button 
                        onClick={() => handleEdit(post)} 
                        className="mt-2 px-2 py-1 bg-yellow-500 text-white rounded">
                        ÏàòÏ†ï
                    </button>
                    <button 
                        onClick={() => handleDelete(post)} 
                        className="ml-2 px-2 py-1 bg-red-500 text-white rounded">
                        ÏÇ≠Ï†ú
                    </button>
                </>
            )}

            {/* ‚úÖ PostImageModal Ï∂îÍ∞ÄÌïòÏó¨ ÌÅ¥Î¶≠Ìïú Ïù¥ÎØ∏ÏßÄ ÌôïÎåÄ Í∞ÄÎä• */}
            {selectedImage && (
                <PostImageModal 
                    selectedImage={selectedImage} 
                    setSelectedImage={setSelectedImage} 
                />
            )}

            {editModal && editPost && (
                <PostEditModal 
                    editPost={editPost} 
                    setEditPost={setEditPost} 
                    setEditModal={setEditModal} 
                    fetchPosts={fetchPosts} 
                />
            )}
        </li>
    );
};

export default PostItem;
